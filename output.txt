0x5b3a0d2467f0
printf
Generating code...
Generating code for 18NExternDeclaration
Generating code for 20NFunctionDeclaration
Creating variable declaration int a
Generating code for 20NVariableDeclaration
Creating variable declaration int x
Creating assignment for x
Creating binary operation 276
Creating identifier reference: a
Creating integer: 5
Generating code for 16NReturnStatement
Generating return code for 10NBinaryOps
Creating binary operation 274
Creating identifier reference: x
Creating integer: 3
Creating block
Creating function: add
Generating code for 20NExpressionStatement
Generating code for 11NMethodCall
Creating integer: 11
Creating method call: add
Creating method call: echo
Generating code for 20NExpressionStatement
Generating code for 11NMethodCall
Creating integer: 12
Creating method call: add
Creating method call: echo
Generating code for 20NExpressionStatement
Generating code for 11NMethodCall
Creating integer: 10
Creating method call: printi
Creating block
; ModuleID = 'main'
source_filename = "main"

@.str = private constant [4 x i8] c"%d\0A\00"

declare i32 @printf(i8, ...)

define internal void @echo(i64 %toPrint) {
entry:
  %0 = call i32 (i8, ...) @printf(ptr @.str, i64 %toPrint)
  ret void
}

define internal void @main() {
entry:
  %0 = call i64 @add(i64 11)
  call void @echo(i64 %0)
  %1 = call i64 @add(i64 12)
  call void @echo(i64 %1)
  call void @printi(i64 10)
  ret void
}

declare void @printi(i64)

define internal i64 @add(i64 %a1) {
entry:
  %a = alloca i64, align 8, addrspace(4)
  store i64 %a1, ptr addrspace(4) %a, align 4
  %x = alloca i64, align 8, addrspace(4)
  %a2 = load ptr addrspace(4), ptr addrspace(4) %a, align 8
  %0 = mul ptr addrspace(4) %a2, i64 5
  store ptr addrspace(4) %0, ptr addrspace(4) %x, align 8
  %x3 = load ptr addrspace(4), ptr addrspace(4) %x, align 8
  %1 = add ptr addrspace(4) %x3, i64 3
  ret ptr addrspace(4) %1
}
Code is generated.
Running code...
58
63
10
Code was run.
